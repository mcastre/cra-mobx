{"ast":null,"code":"import _regeneratorRuntime from \"/Users/martincastre/Desktop/martin-env/cra-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/martincastre/Desktop/martin-env/cra-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"/Users/martincastre/Desktop/martin-env/cra-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/Users/martincastre/Desktop/martin-env/cra-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"/Users/martincastre/Desktop/martin-env/cra-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/martincastre/Desktop/martin-env/cra-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _temp;\n\nimport { observable, action, set } from 'mobx';\nimport UserData from './models';\nvar UserStore = (_dec = action('UserStore | setUserData'), (_class = (_temp = function UserStore(rootStore) {\n  var _this = this;\n\n  _classCallCheck(this, UserStore);\n\n  _initializerDefineProperty(this, \"userData\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"setUserData\", _descriptor2, this);\n\n  this.verifyAddress =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var _this$rootStore, api, ui, navigate, _this$userData, address1, address2, city, state, zip;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _this$rootStore = _this.rootStore, api = _this$rootStore.api, ui = _this$rootStore.ui, navigate = _this$rootStore.navigate;\n            _this$userData = _this.userData, address1 = _this$userData.address1, address2 = _this$userData.address2, city = _this$userData.city, state = _this$userData.state, zip = _this$userData.zip;\n            ui.setUI({\n              isLoading: true\n            }); // Just pretend this is calling USPS for address validation\n\n            _context.prev = 3;\n            _context.next = 6;\n            return api({\n              url: 'https://usps/whatever',\n              method: 'POST',\n              data: {\n                street1: address1,\n                street2: address2,\n                city: city,\n                state: state,\n                zip: zip\n              }\n            });\n\n          case 6:\n            ui.setUI({\n              isLoading: false\n            });\n            navigate('/next-page');\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            ui.setUI({\n              isLoading: false,\n              errorMessage: _context.t0.message\n            });\n            console.log('Error on api call...', _context.t0.message);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n  this.rootStore = rootStore;\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"userData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return UserData;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"setUserData\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (data) {\n      set(_this2.userData, data);\n      return _this2.userData;\n    };\n  }\n})), _class));\nexport { UserStore as default };","map":{"version":3,"sources":["/Users/martincastre/Desktop/martin-env/cra-mobx/src/stores/UserStore/index.js"],"names":["observable","action","set","UserData","UserStore","rootStore","verifyAddress","api","ui","navigate","userData","address1","address2","city","state","zip","setUI","isLoading","url","method","data","street1","street2","errorMessage","message","console","log"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,GAA7B,QAAwC,MAAxC;AACA,OAAOC,QAAP,MAAqB,UAArB;IAEqBC,S,WAOlBH,MAAM,CAAC,yBAAD,C,qBANP,mBAAYI,SAAZ,EAAuB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,OAYvBC,aAZuB;AAAA;AAAA;AAAA;AAAA,2BAYP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BACgB,KAAI,CAACD,SADrB,EACNE,GADM,mBACNA,GADM,EACDC,EADC,mBACDA,EADC,EACGC,QADH,mBACGA,QADH;AAAA,6BAEmC,KAAI,CAACC,QAFxC,EAENC,QAFM,kBAENA,QAFM,EAEIC,QAFJ,kBAEIA,QAFJ,EAEcC,IAFd,kBAEcA,IAFd,EAEoBC,KAFpB,kBAEoBA,KAFpB,EAE2BC,GAF3B,kBAE2BA,GAF3B;AAIdP,YAAAA,EAAE,CAACQ,KAAH,CAAS;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAT,EAJc,CAKd;;AALc;AAAA;AAAA,mBAONV,GAAG,CAAC;AACRW,cAAAA,GAAG,EAAE,uBADG;AAERC,cAAAA,MAAM,EAAE,MAFA;AAGRC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,OAAO,EAAEV,QADL;AAEJW,gBAAAA,OAAO,EAAEV,QAFL;AAGJC,gBAAAA,IAAI,EAAJA,IAHI;AAIJC,gBAAAA,KAAK,EAALA,KAJI;AAKJC,gBAAAA,GAAG,EAAHA;AALI;AAHE,aAAD,CAPG;;AAAA;AAkBZP,YAAAA,EAAE,CAACQ,KAAH,CAAS;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAT;AACAR,YAAAA,QAAQ,CAAC,YAAD,CAAR;AAnBY;AAAA;;AAAA;AAAA;AAAA;AAqBZD,YAAAA,EAAE,CAACQ,KAAH,CAAS;AAAEC,cAAAA,SAAS,EAAE,KAAb;AAAoBM,cAAAA,YAAY,EAAE,YAAEC;AAApC,aAAT;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,YAAEF,OAAtC;;AAtBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAZO;AACrB,OAAKnB,SAAL,GAAiBA,SAAjB;AACD,C,kFAEAL,U;;;;;WAAsBG,Q;;;;;;;;;WAGT,UAAAiB,IAAI,EAAI;AACpBlB,MAAAA,GAAG,CAAC,MAAI,CAACQ,QAAN,EAAgBU,IAAhB,CAAH;AACA,aAAO,MAAI,CAACV,QAAZ;AACD,K;;;SAXkBN,S","sourcesContent":["import { observable, action, set } from 'mobx';\nimport UserData from './models';\n\nexport default class UserStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable userData = UserData;\n\n  @action('UserStore | setUserData')\n  setUserData = data => {\n    set(this.userData, data);\n    return this.userData;\n  };\n\n  verifyAddress = async () => {\n    const { api, ui, navigate } = this.rootStore;\n    const { address1, address2, city, state, zip } = this.userData;\n\n    ui.setUI({ isLoading: true });\n    // Just pretend this is calling USPS for address validation\n    try {\n      await api({\n        url: 'https://usps/whatever',\n        method: 'POST',\n        data: {\n          street1: address1,\n          street2: address2,\n          city,\n          state,\n          zip\n        }\n      });\n      ui.setUI({ isLoading: false });\n      navigate('/next-page');\n    } catch (e) {\n      ui.setUI({ isLoading: false, errorMessage: e.message });\n      console.log('Error on api call...', e.message);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}